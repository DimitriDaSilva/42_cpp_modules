/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Cat.hpp                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dda-silv <dda-silv@student.42lisboa.c      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/07/24 17:06:30 by dda-silv          #+#    #+#             */
/*   Updated: 2021/07/24 22:40:54 by dda-silv         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef CAT_HPP
# define CAT_HPP

# include "Brain.hpp"
# include "Animal.hpp"
# include <iostream>
# include <string>
# include <cmath>

class Cat : public Animal {

	public:
/******************************************************************************/
/*                   	 CONSTRUCTORS & DESTRUCTORS                           */
/******************************************************************************/

/*                                Constructors                                */
		// Default
		Cat(void);
		// Copy
		Cat(Cat const& other);

/*                                Destructors                                 */
		// Default
		virtual ~Cat(void);

/******************************************************************************/
/*                   	   OVERLOADING OPERATORS                              */
/******************************************************************************/

/*                                Assignement                                 */
		Cat& operator=(Cat const& other);

/******************************************************************************/
/*                   	    OTHER CLASS FUNCTIONS                             */
/******************************************************************************/

		void makeSound(void) const;

	private:
/******************************************************************************/
/*                   	          PRIVATE DATA                                */
/******************************************************************************/

		Brain *_brain;
};

#endif
